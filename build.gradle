plugins {
    id 'scala'
}

ext {
    karateVersion = '1.3.1'
    junit5Version = '5.7.2'
}

dependencies {
    testImplementation "com.intuit.karate:karate-gatling:${karateVersion}"
    testImplementation "com.intuit.karate:karate-junit5:${karateVersion}"
    testImplementation "com.intuit.karate:karate-gatling:${karateVersion}"
    testImplementation "org.junit.jupiter:junit-jupiter-api:${junit5Version}"
    testImplementation "org.junit.jupiter:junit-jupiter-engine:${junit5Version}"
    testImplementation "com.github.javafaker:javafaker:1.0.2"
}

repositories {
    mavenCentral()
    // mavenLocal()
}

test {
    systemProperty "karate.options", System.properties.getProperty("karate.options")
    systemProperty "karate.env", System.properties.getProperty("karate.env")
    outputs.upToDateWhen { false }
}

sourceSets {
    test {
        java {
            srcDir file('src/test/java')
        }

        scala {
            srcDir file('src/test/java')
        }

        resources {
            srcDir file('src/test/java')
            exclude '**/*.java'
            exclude '**/*.scala'
        }
    }
}

// to run, type: "gradle gatling"
task gatlingRun(type: JavaExec) {
    group = 'Web Tests'
    description = 'Run Gatling Tests'
    new File("${buildDir}/reports/gatling").mkdirs()
    classpath = sourceSets.test.runtimeClasspath
    main = "io.gatling.app.Gatling"
    args = [
        // change this to suit your simulation entry-point
        '-s', 'lucid.LoadTestSimulation',
        '-rf', "${buildDir}/reports/gatling"
    ]
    systemProperties System.properties
}